// SPDX-FileCopyrightText: 2023 Ledger SAS
// SPDX-FileCopyrightText: 2025 ANSSI
// SPDX-License-Identifier: Apache-2.0

#![allow(non_upper_case_globals)]
use uapi::systypes::DevInfo;
use uapi::systypes::ShmInfo;


/// Liste des identifiants symboliques des périphériques
pub enum DeviceID {
    {% for device in dts.get_active_nodes() -%}
    {% if "0xbabe" in device_get_owner(device) -%}
    {{ device.label | upper }},
    {% endif -%}
    {% endfor %}
}

{% macro device_get_owner(device) -%}
{% if device["outpost,owner"] -%}
{{ "0x%x"|format(device["outpost,owner"]) }}
{% else -%}
{{ "0x%x"|format(0) }}
{% endif -%}
{% endmacro -%}

/// Tableau de descripteurs de périphériques
pub static DEVICES: &[DevInfo] = &[
    {% for device in dts.get_active_nodes() -%}
    {% if "0xbabe" in device_get_owner(device) -%}
    DevInfo {
        id: {{ "0x%x"|format(loop.index0) }},
        {% if device.reg -%}
        baseaddr: {{ "0x%08x"|format(device.reg[0]) }},
        size: {{ "0x%08x"|format(device.reg[1]) }},
        {% else -%}
        baseaddr: 0,
        size: 0,
        {% endif -%}
        num_interrupt: {% if device.interrupts %}1{% else %}0{% endif %},
        its: [
            {% if device.interrupts -%}
            { it_controler: {{ device.interrupts[1] }}, it_num: {{ device.interrupts[0] }} },
            {% else -%}
            { it_controler: 0, it_num: 0 },
            {% endif -%}
            {% for _ in range(7) -%}
            { it_controler: 0, it_num: 0 },
            {% endfor %}
        ],
        num_ios: {% if device["pinctrl-0"] %}{{ device["pinctrl-0"] | length }}{% else %}0{% endif %},
        ios: [
            {% set numio = device["pinctrl-0"] | length if device["pinctrl-0"] else 0 %}
            {% for io_idx in range(8) %}
            {% if device["pinctrl-0"] and io_idx < device["pinctrl-0"] | length %}
            {% set io = device["pinctrl-0"][io_idx] %}
            {
                {% set ns.io_gpio_port = 0 %}
                {% set gpio_ports = dts.get_compatible("st,stm32-gpio") %}
                {% for port in gpio_ports if port.status == "okay" %}
                {% if port.label == io.pinmux[0].label %}
                port: {{ ns.io_gpio_port }},
                {% endif %}
                {% set ns.io_gpio_port = ns.io_gpio_port + 1 %}
                {% endfor %}
                pin: {{ io.pinmux[1] }},
                mode: {{ io.pinmux[2] }},
                af: {{ io.pinmux[3] }},
                ppull: {{ io.pincfg[0] }},
                speed: {{ io.pincfg[1] }},
                pupdr: {{ io.pincfg[2] }},
            },
            {% else %}
            { port: 0, pin: 0, mode: 0, af: 0, ppull: 0, speed: 0, pupdr: 0 },
            {% endif %}
            {% endfor %}
        ],
    },
    {% endif %}
    {% endfor %}
];

/// Noms des périphériques (même ordre que `DEVICES`)
pub static DEVICE_NAMES: &[&str] = &[
    {% for device in dts.get_active_nodes() -%}
    {% if "0xbabe" in device_get_owner(device) -%}
    "{{ device.label }}",
    {% endif -%}
    {% endfor %}
];


/// Liste des segments de mémoire partagée disponibles (SHMS)
pub static SHMS: &[ShmInfo] = &[
{%- for node in dts.get_compatible("outpost,shm") if node.status == "okay" %}
    ShmInfo {
        id: {{ "0x%x" % loop.index0 }},
        {% if node.reg %}
        baseaddr: {{ "0x%08x" % node.reg[0] }},
        size: {{ "0x%08x" % node.reg[1] }},
        {% else %}
        baseaddr: 0,
        size: 0,
        {% endif %}
        perms: {% if node["outpost,perms"] %}{{ "0x%x" % node["outpost,perms"] }}{% else %}0{% endif %},
        label: {{ "0x%x" % node.get("outpost,label", 0) }},
    },
{%- endfor %}
];

pub static SHM_NAMES: &[&str] = [
{%- for node in dts.get_compatible("outpost,shm") if node.status == "okay" %}
    "{{ node.name }}",
{%- endfor %}
];